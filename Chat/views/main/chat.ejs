<style rel="text/stylesheet">
h2{position:relative;text-align:center}
.form-control{height: inherit;width: 300px;position: relative;left: 40%;top: 20px;}
#postMessageButton{position: relative;left: 45%;top: 40px;}
#messagesContainer{text-align:center;font-size:14px}
.chat-container{position: absolute;bottom: 0;left: 60%;overflow: hidden;z-index:100}
.chatheader{width: 100%;height: 49px;color:#fff;background-color:#333333;padding:12px 10px;font-size:1.1em;overflow: visible;font-family:Arial,Helvetica,sans-serif;font-weight: 200;border: 1px solid #aaa;border-radius: 4px;border-bottom: 0px;border-bottom:1px;}
.edit-box{background: rgb(204, 204, 204);
width:289px;height: 270px;border-top: 1px solid #aaa;border-bottom-color:#fff;
border-bottom-left-radius:4px;-webkit-border-radius: 1px;-moz-border-radius: 4px;-ms-border-radius: 4px;-o-border-radius: 4px;
position: relative;border-radius: 2px;position: relative;margin-top:-16px;overflow-y:scroll;}
.edit-input{width: 289px;height: 35px;  position: relative; padding-left: 15px;color: rgb(73, 72, 72);font-size: 16px;border: 0px none;
background-color:#fff;border:solid #ccc 1px;}
.edit-input:focus{outline: none;border-color: #1c7bcc;}
.chatheader-img{width: 19px;height: 15px;
margin-top: 1px;position:relative;float:left;margin-left:0px;}
.siz{width: 15px;height: 16px;cursor:pointer;}
.minus{float:right;margin-right:30px;margin-top:2px;}
.minus:hover,.close:hover {opacity: .7;}
.close{float:right;margin-right:-43px;margin-top:1px;opacity:1}
#cwindow .ans, #cwindow .ques{display: block;font-size: 16px;}
</style>
<h2>Chat here</h2>
<div id="cwrapper" class="chat-container">
        <h2 class="chatheader" style="cursor: pointer;"><span style="font-size:16px;margin-left:-90px">Chat here</span><small><img class="chatheader-img" style="" src="images/chathead.png">
        <img class="minus siz" src="images/minimize.png"><img class="close siz" src="images/close1.png"><div style="clear:both"></div> </small>
        </h2>
        <div id="cwindow" class="edit-box">
            <div class="ans" style="margin-top:5px;text-align:left;margin-left:10px" id="messagesContainer">Welcome to <%= username %>!<br>&nbsp;
            </div>
        </div>
        <input type="text" id="message" class="input edit-input" placeholder="Send a message">
</div>
<button id="postMessageButton" class="" style="display:none"></button>
<script>
    var MessageModel = Backbone.Model.extend({
        urlRoot: '/messages',
    });
    var SailsCollection = Backbone.Collection.extend({
    sailsCollection: "",
    socket: null,
    sync: function(method, model, options){
        
        var where = {};
        if (options.where) {
            where = {
                where: options.where
            }
        }       
        if(typeof this.sailsCollection === "string" && this.sailsCollection !== "") {
            this.socket = io.connect();
            this.socket.on("connect", _.bind(function(){
                this.socket.request("/" + this.sailsCollection, where, _.bind(function(users){
                    this.set(users);
                }, this));
     
                this.socket.on("message", _.bind(function(msg){
                    var m = msg.verb;  //In v0.9.0 the REST method that is post,get is stored in the messages verb 
                    //alert(m); 
                    if (m === "create") {
                        this.add(msg.data);
                    } else if (m === "update") {
                        this.get(msg.data.id).set(msg.data);
                    } else if (m === "destroy") {
                        this.remove(this.get(msg.data.id)); //this
                    }
                }, this));
                /*this.socket.on('remoteClick', function (data) {
                    alert("some one clicked");
                }); */
            }, this));
        } else {
            console.log("Error: Cannot retrieve models because property 'sailsCollection' not set on the collection");
        }
    }
}); 
    var MessageCollection = SailsCollection.extend({
    sailsCollection: 'messages',
    model: MessageModel
    });

    var messages = new MessageCollection();
    messages.fetch();
 
    $("#postMessageButton").click(function(){
        var messageText = $("#message").val();
        messages.create({message: messageText}, {wait: true});
        $("#message").val("");
    });

    _.templateSettings = {
    interpolate : /\{\{(.+?)\}\}/g
};


var MessagesView = Backbone.View.extend({
    el: '#messagesContainer',
    initialize: function () {
        this.collection.on('add', this.render, this);
        this.render();
    },
    template: _.template("<div><p class='chatmsg'>{{ username }} : {{ message }}</p></div>"),
        render: function () {
            this.$el.html("");
            this.collection.each(function(msg){
                this.$el.append(this.template(msg.toJSON()));
            }, this)
    }
});
 
var mView = new MessagesView({collection: messages});



$(document).ready(function()
{
    var windowHeight;
    var myBottom;
    var newPosition;
    $(".chatheader").css({'cursor':'default'});
    var chatHeight = $(".chat-container").css("top");
    $( ".chatheader" ).stop();
    $(".minus" ).click(function (e) 
    {
        windowHeight = $(window).height();
        myBottom = 60;
        newPosition = windowHeight - myBottom;
        //alert(a);
        $('.chat-container').css('top','80%');
        $('.chat-container').animate({top:newPosition},500);
        $(".chatheader").css({'cursor':'pointer'});
        $('.chatheader').addClass('chathead');
        e.stopPropagation();
    });
    $(document).on('click','.chathead',function()
    {       
        var windowHeight1 = $(window).height();
        var chatheader = $(".chat-container").height();
        var chatHeight = windowHeight1 - 368;
        //alert(chatHeight);
        $(".chat-container").animate({top:chatHeight},500);
        $('.chat-container').css("position","absolute").css("bottom","0");
        $(".chatheader").css({'cursor':'default'});
    });
    $(".close").click(function(){
        $(".chat-container").css("visibility","hidden");
    });        



$("#message").keyup(function(event){
    if(event.keyCode == 13){
        $("#postMessageButton").click();
        $('#cwindow').scrollTop(30000);
    }
});
});
</script> 

